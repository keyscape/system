{{> system10/navbarLog user}}

<div style="height: 100vh; padding-top: 3.5rem;">
    <div class="container-fluid h-100 ">
        <div class="row h-100 justify-content-center align-items-center text-center">

            <div class="row col-11 col-sm-10 col-md-8 col-lg-6 justify-content-center text-dark py-3 border border-light rounded" style="background-color: rgba(0, 0, 0, 0.6);">

                <div class="col-12 mb-3">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="username" class="form-control form-control-user font-nasalization form-disabled user" id="floatingUsername" value="{{user.username}}" placeholder="Nome de Usuário" oninput="validationUsername(this)">
                            <label class="label-user" for="floatingUsername">Nome de Usuário</label>
                        </div>
                    </button>
                </div>

                <div class="col-12 mb-3">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="password" type="password" class="form-control form-control-user font-nasalization form-disabled user" id="floatingPassword" value="NaoTemNadaAqui" placeholder="Senha" oninput="validationPassword(this)">
                            <label class="label-user" for="floatingPassword">Senha</label>
                        </div>
                    </button>
                </div>

                <div class="col-12 mb-3">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="fullName" class="form-control form-control-user font-nasalization form-disabled user" id="floatingFullName" value="{{user.fullName}}" placeholder="Nome Completo" oninput="validationFullName(this)">
                            <label class="label-user" for="floatingFullName">Nome Completo</label>
                        </div>
                    </button>
                </div>

                <div class="col-12 mb-3">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="email" type="email" class="form-control form-control-user font-nasalization form-disabled user" id="floatingEmail" value="{{user.email}}" placeholder="E-mail" oninput="validationEmail(this)">
                            <label class="label-user" for="floatingEmail">E-mail</label>
                        </div>
                    </button>
                </div>

                <div class="col-sm-5 mb-3">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="ra" type="number" class="form-control form-control-user font-nasalization form-disabled user" id="floatingRA" value="{{#if user.ra}}{{user.ra}}{{else}}0{{/if}}" placeholder="RA" oninput="validationRA(this)">
                            <label class="label-user" for="floatingRA">RA</label>
                        </div>
                    </button>
                </div>

                <div class="col-sm-7 mb-3">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="cpf" class="form-control form-control-user font-nasalization form-disabled user" id="floatingCPF" value="{{#if user.cpf}}{{user.cpf}}{{else}}-{{/if}}" placeholder="CPF" oninput="validationCPF(this)">
                            <label class="label-user" for="floatingCPF">CPF</label>
                        </div>
                    </button>
                </div>

                <div class="col-sm-8 mb-3 mb-sm-0">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="edu" class="form-control form-control-user font-nasalization form-disabled user" id="floatingEdu" value="{{#if user.edu}}{{user.edu}}{{else}}-{{/if}}" placeholder="Instituição de Ensino" oninput="validationEdu(this)">
                            <label class="label-user" for="floatingEdu">Instituição de Ensino</label>
                        </div>
                    </button>
                </div>

                <div class="col-sm-4 mb-3 mb-sm-0">
                    <button class="w-100 p-0 border-0 bg-transparent" onclick="showModalUpdateUser(this)">
                        <div class="form-floating">
                            <input name="age" type="number" class="form-control form-control-user font-nasalization form-disabled user" id="floatingAge" value="{{user.age}}" placeholder="Idade" oninput="validationAge(this)">
                            <label class="label-user" for="floatingAge">Idade</label>
                        </div>
                    </button>
                </div>

            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="modalUpdateUser" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content" style="background-color: rgb(0, 0, 0);">
            <div class="modal-header justify-content-center">
                <h5 class="modal-title">Editar</h5>
            </div>
            <div class="modal-body text-center font-nasalization">

                <div id="divContentToEdit">
                    
                </div>

                <div id="divShowPassword" class="form-check text-start small-2 mt-2 d-none">
                    <input class="form-check-input" type="checkbox" value="" id="flexCheckShowPasword" onchange="checkShowPassword(this.checked)">
                    <label class="form-check-label" for="flexCheckShowPasword">
                        Exibir senha
                    </label>
                </div>

                <p id="errUpdateUser" class="text-center small-2 text-danger mb-0 mt-3 d-none">Algo deu errado, tente novamente!</p>

            </div>
            <div class="modal-footer">
                <button id="buttonUpdateUser" class="btn btn-light" onclick="updateUser()" disabled>Salvar</button>
            </div>
        </div>
    </div>
</div>

<input id="idUser" class="d-none" value="{{user._id}}">

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<script>
    const _pathUpdateUser = '/room10c/user'

    document.getElementById('navItemUser').classList.add('active')

    async function postData (_path, _data){
        const response = await fetch(_path, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(_data)
        });

        return response.json()
    }


    function validationUsername(username){
        if(username.value.length < 2 || username.value.length > 16){
            username.classList.remove('is-valid')
            username.classList.add('is-invalid')
            document.getElementById('buttonUpdateUser').disabled = true
        }
        else{
            username.classList.remove('is-invalid')
            username.classList.add('is-valid')
            document.getElementById('buttonUpdateUser').disabled = false
        }
    }

    function validationPassword(password){

        if(password.value.length < 8 || password.value.length > 16){
            password.classList.remove('is-valid')
            password.classList.add('is-invalid')
            document.getElementById('buttonUpdateUser').disabled = true
        }
        else{
            password.classList.remove('is-invalid')
            password.classList.add('is-valid')

            let otherPassword = password.id.includes('Old') ? document.getElementById('floatingPasswordNew') : document.getElementById('floatingPasswordOld')

            if(otherPassword.value.length < 8 || otherPassword.value.length > 16){
                otherPassword.classList.remove('is-valid')
                otherPassword.classList.add('is-invalid')
                document.getElementById('buttonUpdateUser').disabled = true
            }
            else{
                otherPassword.classList.remove('is-invalid')
                otherPassword.classList.add('is-valid')
                document.getElementById('buttonUpdateUser').disabled = false
            }

        }

    }

    function validationFullName(fullName){
        if(fullName.value.length < 5){
            fullName.classList.remove('is-valid')
            fullName.classList.add('is-invalid')
            document.getElementById('buttonUpdateUser').disabled = true
        }
        else{
            fullName.classList.remove('is-invalid')
            fullName.classList.add('is-valid')
            document.getElementById('buttonUpdateUser').disabled = false
        }


    }

    function validationEmail(email){
        if(!(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email.value))){
            email.classList.remove('is-valid')
            email.classList.add('is-invalid')
            document.getElementById('buttonUpdateUser').disabled = true
        }
        else{
            email.classList.remove('is-invalid')
            email.classList.add('is-valid')
            document.getElementById('buttonUpdateUser').disabled = false
        }

    }

    function validationRA(ra) {

        let numStr = ra.value
        const numLength = numStr.length;
        let nMult = numLength;
        let sum = 0;
        let resBol = false

        for (let i = 0; i < numLength - 1; i++) {
            sum += parseInt(numStr.charAt(i)) * nMult;
            nMult--;
        }

        let res = (sum * 10) % 11;

        res = res == 10 || res == 11 ? 0 : res;

        resBol = (res == numStr[numLength - 1])


        if(!resBol && ra.value != ''){
            ra.classList.remove('is-valid')
            ra.classList.add('is-invalid')
            document.getElementById('buttonUpdateUser').disabled = true
        }
        else{
            ra.classList.remove('is-invalid')
            ra.classList.add('is-valid')
            document.getElementById('buttonUpdateUser').disabled = false
        }







    }

    function validationCPF(cpf){


        let v = cpf.value;

        if(isNaN(v[v.length-1])){ // impede entrar outro caractere que não seja número
            cpf.value = v.substring(0, v.length-1);
        }

        cpf.setAttribute("maxlength", "14");

        if (v.length == 3 || v.length == 7) cpf.value += ".";
        if (v.length == 11) cpf.value += "-";

        let numStr = v
        let resBol = false

        if(numStr.length == 14){
            numStr = numStr.replace(/[\.\-]/g,'')

            const numLength = numStr.length;
            let nMult = 10,
                sum = 0,
                res1 = 0,
                res2 = 0

            for (let i = 0; i < numLength - 2; i++) {
                sum += parseInt(numStr.charAt(i)) * nMult;
                nMult--;
            }

            res1 = (sum * 10) % 11;
            res1 = res1 == 10 ? 0 : res1;

            nMult = 11;
            sum = 0;

            for (let i = 0; i < numLength - 1; i++) {
                sum += parseInt(numStr.charAt(i)) * nMult;
                nMult--;
            }

            res2 = (sum * 10) % 11;
            res2 = res2 == 10 ? 0 : res2;

            resBol = (res1 == numStr[numLength - 2] && res2 == numStr[numLength - 1])

        }

        console.log(!resBol)
        console.log(cpf.value != '')

        if(!resBol && cpf.value != ''){
            cpf.classList.remove('is-valid')
            cpf.classList.add('is-invalid')
            document.getElementById('buttonUpdateUser').disabled = true
        }
        else{
            cpf.classList.remove('is-invalid')
            cpf.classList.add('is-valid')
            document.getElementById('buttonUpdateUser').disabled = false
        }


    }

    function validationEdu(edu){
        edu.classList.remove('is-invalid')
        edu.classList.add('is-valid')
        document.getElementById('buttonUpdateUser').disabled = false
    }

    function validationAge(age){

        if(age.value < 5 || age.value > 150){
            age.classList.remove('is-valid')
            age.classList.add('is-invalid')
            document.getElementById('buttonUpdateUser').disabled = true
        }
        else{
            age.classList.remove('is-invalid')
            age.classList.add('is-valid')
            document.getElementById('buttonUpdateUser').disabled = false
        }

    }


    function checkShowPassword(isChecked){
        if(isChecked){
            document.getElementById('floatingPasswordOld').type = 'text'
            document.getElementById('floatingPasswordNew').type = 'text'
        }
        else{
            document.getElementById('floatingPasswordOld').type = 'password'
            document.getElementById('floatingPasswordNew').type = 'password'

        }
    }

    function showModalUpdateUser(elm){

        let newElm = elm.children[0].cloneNode(true),
            divElm = document.getElementById('divContentToEdit')

        newElm.children[0].id = newElm.children[0].id + 'New'
        newElm.children[1].htmlFor = newElm.children[1].htmlFor + 'New'

        //newElm.children[0].value = elm.children[0].children[0].value

        newElm.children[0].classList.remove('form-disabled')

        divElm.innerHTML = ''
        document.getElementById('divShowPassword').classList.add('d-none')

        if(newElm.children[0].name == 'password'){
            let oldElm = elm.children[0].cloneNode(true)

            oldElm.classList.add('mb-3')

            oldElm.children[0].id = oldElm.children[0].id + 'Old'
            oldElm.children[1].htmlFor = oldElm.children[1].htmlFor + 'Old'

            oldElm.children[1].innerHTML = 'Senha Antiga'

            newElm.children[1].innerHTML = 'Senha Nova'

            oldElm.children[0].value = ''
            newElm.children[0].value = ''

            oldElm.children[0].classList.remove('form-disabled')

            divElm.appendChild(oldElm)

            document.getElementById('divShowPassword').classList.remove('d-none')
        }

        divElm.appendChild(newElm)

        new bootstrap.Modal(document.getElementById('modalUpdateUser'), {
            keyboard: false
        }).show()
    }

    function updateUser(){
        let contentToUpdate = document.getElementById('divContentToEdit').children[0].children[0],
            dataToSend = {idUser: document.getElementById('idUser').value}

        if(contentToUpdate.name == 'password'){
            dataToSend['passwordNew'] = document.getElementById('floatingPasswordNew').value
        }

        dataToSend[contentToUpdate.name] = contentToUpdate.value

        postData(_pathUpdateUser, dataToSend).then(resp => {

            if(resp.err){
                document.getElementById('errUpdateUser').innerHTML = resp.message
                document.getElementById('errUpdateUser').classList.remove('d-none')
            }
            else{
                location.reload()
            }

        }).catch(err => {
            console.log(err)
        }) 
    
    }

</script>



{{!-- 
                <h2 class="my-3 text-light">Criar</h2>

                <div class="col-12 mb-3">
                    <div class="form-floating">
                        <input name="username" class="form-control form-control-signup font-nasalization" id="floatingUsername" placeholder="Nome de Usuário">
                        <label class="label-signup" for="floatingUsername">Nome de Usuário <span class="text-danger">*</span></label>
                        <div class="invalid-tooltip small-3 font-nasalization">
                            Deve conter de 3 a 16 caracteres
                        </div>
                    </div>
                </div>

                <div class="row col-12 mb-3 p-0">
                    <div class="col-10 pe-0">

                        <div class="form-floating">
                            <input name="password" type="password" class="form-control form-control-signup font-nasalization rounded-0 rounded-start" id="floatingPassword" placeholder="Senha">
                            <label class="label-signup" for="floatingPassword">Senha <span class="text-danger">*</span></label>
                            <div class="invalid-tooltip small-3 font-nasalization">
                                Deve conter de 8 a 16 caracteres
                            </div>
                        </div>

                    </div>

                    <div class="col-2 ps-0">
                        <button class="btn btn-outline-light w-100 h-100 eye-border" type="button" id="buttonEye">
                            <i class="fas fa-eye-slash" id="iconEye"></i>
                        </button>
                    </div>                     
                </div>

                <div class="col-12 mb-3">
                    <div class="form-floating text-dark">
                        <input type="text" class="form-control form-control-signup font-nasalization" id="floatingFullName" placeholder="Nome Completo">
                        <label class="label-signup" for="floatingFullName">Nome Completo <span class="text-danger">*</span></label>
                        <div class="invalid-tooltip small-3 font-nasalization">
                            Muito curto
                        </div>
                    </div>
                </div>

                <div class="col-12 mb-3">
                    <div class="form-floating text-dark">
                        <input type="email" class="form-control form-control-signup font-nasalization" id="floatingEmail" placeholder="E-mail">
                        <label class="label-signup" for="floatingEmail">E-mail <span class="text-danger">*</span></label>
                        <div class="invalid-tooltip small-3 font-nasalization">
                            Inválido
                        </div>
                    </div>
                </div>
                
                <div class="col-sm-5 mb-3">
                    <div class="form-floating text-dark">
                        <input type="number" class="form-control form-control-signup font-nasalization" id="floatingRA" placeholder="RA">
                        <label class="label-signup" for="floatingRA">RA</label>
                        <div class="invalid-tooltip small-3 font-nasalization">
                            Inválido
                        </div>
                    </div>
                </div>

                <div class="col-sm-7 mb-3">
                    <div class="form-floating text-dark">
                        <input type="text" class="form-control form-control-signup font-nasalization" id="floatingCPF" placeholder="CPF" oninput="cpfChange(this)" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-html="true" title="Utilizado para obtenção<br>de certificados">
                        <label class="label-signup" for="floatingCPF">CPF</label>
                        <div class="invalid-tooltip small-3 font-nasalization">
                            Inválido
                        </div>
                    </div>
                </div>

                <div class="col-sm-5 mb-3">
                    <div class="form-floating text-dark">
                        <input type="number" class="form-control form-control-signup font-nasalization" id="floatingAge" placeholder="Idade">
                        <label class="label-signup" for="floatingAge">Idade <span class="text-danger">*</span></label>
                        <div class="invalid-tooltip small-3 font-nasalization">
                            Inválida
                        </div>
                    </div>
                </div>


                <div class="col-sm-7 mb-1">
                    <div class="form-floating text-dark">
                        <input type="text" class="form-control form-control-signup font-nasalization" id="floatingEdu" placeholder="Instituição de Ensino" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-html="true" title="Instituição de Ensino<br>Ex: UTFPR-CP">
                        <label class="label-signup" for="floatingEdu">Instit. Ens.</label>
                    </div>
                </div>
                
                <p class="text-start small-4 text-white font-nasalization mb-1"> <span class="text-danger">*</span> Obrigatório</p>

                <div class="col-sm-6 mb-3">
                    <button class="btn btn-signup w-100" onclick="buttonCreateUser()">Criar</button>
                </div>


                <p class="text-center small-4 text-white">Já tem uma conta? <a href="/room10c/login" class="link-danger">Entrar</a></p>

 --}}